---

- name: common
  block:
  - name: install system packages
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    become: yes

  - name: Copy ssh key
    authorized_key:
      key: "{{ lookup('file', ssh_pub_key_dir + '/' + item + '.pub') }}"
      user: "{{ user }}"
    with_items: "{{ ssh_authorized_keys }}"

  - name: "create dir {{ target_dir }}"
    file:
      path: "{{ target_dir }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ group }}"
    become: yes

- name: "clone collectors repo in {{ target_dir }}"
  git:
    repo: git@github.com:opullence/collectors.git
    version: master
    dest: "{{ target_dir }}"
    accept_hostkey: yes
  become: no

- name: pyhton init repo
  block:
  - name: update pip packages
    pip:
      name: "{{ packages_pip }}"
      virtualenv: /opt/opullence/env 
      virtualenv_command: /usr/bin/python3 -m venv
      state: latest

  - name: install requirements
    pip:
      requirements: /opt/opullence/requirements.txt
      virtualenv: /opt/opullence/env

- name: run redis in container
  block:
  - name: copy redis docker compose
    copy:
       src: opt/redis
       dest: /opt/
       owner: "{{ user }}"
       group: "{{ group }}"
    become: yes
  - name: install docker py
    pip:
      name:
        - pip
        - docker-compose
      state: latest
    become: yes
  - name: docker compose operation
    docker_compose:
      project_src: /opt/redis
    become: yes

- name: celery service config
  block:
  - name: "create dir {{ celery_dir }}"
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ group }}"
    with_items: "{{ celery_dir }}"
    become: yes

  - name: copy celery service config
    copy:
      src: etc/
      dest: /etc/
      owner: root
      group: root
    become: yes

  - name: copy celery service config with variable
    template:
      src: celery.j2
      dest: /etc/systemd/system/celery.service
    become: yes

  - name: load and start celery service
    systemd:
      daemon_reload: yes
      name: celery
      state: started
    become: yes